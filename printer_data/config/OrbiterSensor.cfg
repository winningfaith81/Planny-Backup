#########################################################
########### Orbiter Sensor CONFIGURATION ################
#########################################################

# config file version v3.1.3
# release date: 14.12.2024

#########################################################
########### CHANGE HERE MACRO CONFIGURABLES #############
#########################################################

[gcode_macro _SENSOR_VARIABLES]         # change here macro configurables, enable disable functions!*************************
variable_filament_load_temp     :230    # temperature to heat up hotend for filament loading, default is 235
variable_filament_unload_temp   :185    # temperature to heat up hotend for filament un-loading, default is 185
variable_filament_load_min_temp :190    # minimum hotend set temperature allowed in filament load macro, default is 190
variable_nozzle_purge_length    :100    # filament extrude amount during load sequenc, hotend purge from old filament, default is 200
variable_nozzle_purge_speed     :450    # filament extrude speed in mm/min adjust this value lower if flow is too high and extruder skips during loading, default is 300
variable_unload_distance        :65     # filament retract distance for unload procedure. this length shall be long enough to extract the filament above the drive gears
variable_disable_autoload       :False  # disable filament autoload feature by setting this variable True
variable_disable_autounload     :False  # disable filament unload by unload button
variable_disable_runout         :False  # disable runout by setting this variable True
variable_disable_autochange     :True   # disable filament auto change after runout detection
variable_disable_tangle         :False  # disable tangle by setting this variable True
variable_pause_timeout          :3600   # printer timeout setting in seconds, avoids disabling of steppers and heaters after klipper default timeout of 600s 
variable_enable_beep            :False  # uses M300 sound feature, set it True to enable
variable_park_position_x        :20     # edit your X parking position here for pause macro triggered by runout
variable_park_position_y        :0      # edit your Y parking position here for pause macro triggered by runout
variable_park_lift_z            :20     # edit your Z-Lift amount for parking position here, default is 10
Variable_park_retraction        :1      # edit your retraction amount for parking, default is 1
gcode:


########################################################
####   Macros - Filament Sensor Button
########################################################

#[gcode_button filament_sense]      # Base: OrbiterSensor.cfg; Updated: OrbitoolO2.cfg
#pin: !orbitoolO2:PA13 
#press_gcode: # sensor released  -runnout detected!
#  runnout_init
#release_gcode: # gcode macro for filament auto-load, sensor pressed
#  filament_load_init

[filament_switch_sensor O2_sensor]
switch_pin: orbitoolO2:PA13              # edit sensor connection pin if not used with orbiter toolboards
pause_on_runout: False
runout_gcode: RUNOUT_INIT
insert_gcode: FILAMENT_LOAD_INIT
event_delay: 0.1                         # may be changed to 0 for user with mmu
pause_delay: 0.1

########################################################
####   Macros - Filament Unload
########################################################

[gcode_button FILAMENT_UNLOAD]
pin: orbitoolO2:PA14             #  edit sensor connection pin, if not used with ortbiter toolboards
press_gcode:                     # filament unload procedure   
  M118 Planny: Unloading Filament
  UNLOAD_TANGLE_INIT
release_gcode:                   # do not add any macro call here
  # M118 Debug Unload release

#################################################################
########### DO NOT CHANGE ANYTHING BELOW THIS LINE!!! ###########
#################################################################

[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro RUNOUT_INIT]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
  {% if(sensor.disable_runout|lower == 'false') %}
      FILAMENT_CHANGE_STATE1
  {% else %}
    M118 Planny: Filament runout is disabled in the sensor config file! 
  {% endif %} 

[gcode_macro FILAMENT_CHANGE_STATE1]
variable_changebusy: 0
variable_temp_target: 0
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
  {% if changebusy == 0 %}
    STATUS_ERROR
    M118 Planny: Pausing - I am out of filament! 
    PAUSE # call printer pause macro              
    {% if (sensor.disable_autochange|lower == 'false') %}
      SET_GCODE_VARIABLE MACRO=FILAMENT_CHANGE_STATE1 VARIABLE=changebusy VALUE=1       
      FILAMENT_CHANGE_STATE2
    {% endif %}  
  {% endif %}

[gcode_macro FILAMENT_CHANGE_STATE2]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
  SET_GCODE_VARIABLE MACRO=UNLOAD_TANGLE_INIT VARIABLE=loadbusy VALUE=1  
  #{% if (sensor.enable_beep|lower == 'true') %} 
  #  M300 # beep sound
  #{% endif %}
  STATUS_BUSY
  M118 Planny: Pulling out the filament...   
  M83
  G92 E0   
  # {% if printer[printer.toolhead.extruder].temperature < 185 %} # hardcoded threshold
  {% if (printer.extruder.can_extrude|lower != 'true')%} # Checking for minimum extrusion temperature
        # Check if temperature is over the minimum extrusion temperature. min_extrude_temp must be defined in the extruder config (to about 185)
      M118 Planny: Warming up my nozzle! 
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_unload_temp} # restore user temp if it was set before loading      
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.filament_unload_temp-1} #wait for reaching filament unload temperature
  {% endif %}     
  {% if(printer.extruder.target == 0) %} # Checking for set temperature - if is zero, then heat hotend
      M118 Planny: Warming up my nozzle!
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_unload_temp} # restore user temp if it was set before loading      
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.filament_unload_temp-1} #wait for reaching filament unload temperature
  {% endif %} 
  STATUS_BUSY
  M118 Planny: Time for extraction ........
  G0 E-5 F3600 	      ## extract filament to cold end
  G4 P2000            ## wait for two seconds
  G0 E5 F3600         ## push the filament back 
  G0 E-5 F3600 	      ##extract filament to cold end
  G0 E-{sensor.unload_distance} F300	# continue extraction slow allow filament to be cooled enough before reaches the gears  
  M400   
  STATUS_ERROR
  M118 Planny: Ready to load new filament!
  #SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0 # switch off heater
  UPDATE_DELAYED_GCODE ID=CLEAR_LOADBUSY DURATION=0.5
  UPDATE_DELAYED_GCODE ID=CLEAR_CHANGEBUSY DURATION=0.5

########################################################
####   Macros: Filament Auto Load
########################################################

[gcode_macro FILAMENT_LOAD_INIT]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.disable_autoload|lower == 'false') %}
      SET_GCODE_VARIABLE MACRO=UNLOAD_TANGLE_INIT VARIABLE=loadbusy VALUE=1
      LOAD_FILAMENT
    {% else %}
    M118 Planny: Filament auto-load is disabled in the sensor config file! 
    {% endif %} 
  {% else %}    
    M118 Planny: Printing! Can't load filament right now! 
  {% endif %} 

[gcode_macro LOAD_FILAMENT]
variable_USER_TEMP: 0
variable_LOAD_TEMP: 0
gcode:    
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
      {% set USER_TEMP = printer.extruder.target %} # save user set temperature before loading
      {% set LOAD_TEMP = 0 %} 
      STATUS_BUSY
      M118 Planny: Feeding my face with filament...  
        {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target < sensor.filament_load_min_temp) %} # checking for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)                                 
          M118 Planny: Heating up real quick before loading filament ....
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_load_temp}
         {% set LOAD_TEMP = sensor.filament_load_temp %} # save user set temperature before loading                    
        {% endif %}     
    #{% if (sensor.enable_beep|lower == 'true') %} 
    #  M300 # beep sound
    #{% endif %}    
    STATUS_BUSY
    M118 Planny: Feeding my face with filament...  
    M82           #set extruder to absolute mode
    G92 E0
    G4 P1500        # wait for 1.5 seconds
    FORCE_MOVE STEPPER=extruder DISTANCE=15 VELOCITY=10 ACCEL=1000  # load filament inside the gears force move needs to be enabled    
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={LOAD_TEMP-1} # wait for reaching set temperature    
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={USER_TEMP-1} # wait for reaching set temperature    
    G1 E{sensor.nozzle_purge_length} F{sensor.nozzle_purge_speed} # extrude preconfigured purge length
    M118 Planny: Blowing my nose! 
    M400 # wait to complete nozzle purge
    {% if ((printer.print_stats.state == "printing")  or (printer.print_stats.state == "paused"))%} #if the printer is not printing or paused the nozzle temp will not be restored but set to 0.
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={USER_TEMP} # restore user temp if it was set before loading        
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={USER_TEMP-1}          
    {% else %}      
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% endif %}
    {% if printer["filament_switch_sensor O2_sensor"].filament_detected==true %}
      STATUS_READY
      M118 Planny: I'm full of filament!      
      #{% if (sensor.enable_beep|lower == 'true') %}
      #  M300 # beep sound
      #{% endif %}
    {% else %}
      STATUS_ERROR
      M118 Planny: Filament load failed!        
    {% endif %}      
    UPDATE_DELAYED_GCODE ID=CLEAR_LOADBUSY DURATION=2   

########################################################
####   Macros: Filament Auto Unload & Tangle
########################################################

[gcode_macro UNLOAD_TANGLE_INIT]
variable_loadbusy: 0
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
  {% if (printer.print_stats.state == "printing") %} # filament tangle detection during printing  
    {% if(sensor.disable_tangle|lower == 'false') %} # run tangle detection macro if enabled
      FILAMENT_TANGLE  
    {% else %} #filament tangle disabled send message to console
      STATUS_ERROR
      M118 Planny: Filament tangle detected during print, action disabled!
    {% endif %} 
  {% else %} #filament unload button pressed
      #{% if (printer.print_stats.state == "paused" and loadbusy == 0) %} #enable unload if not printing and not paused
      {% if (loadbusy == 0) %} #enable unload if not already loading
        {% if(sensor.disable_autounload|lower == 'false') %} # run unload macro if enabled
          UNLOAD_FILAMENT
          M118 Planny: Filament Unload Requested via Button ....
        {% endif %}
      {% endif %}
  {% endif %}

[gcode_macro UNLOAD_FILAMENT] 
gcode:
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
      #{% if (sensor.enable_beep|lower == 'true') %} 
      #  M300 # beep sound
      #{% endif %}
      M118 Planny: Unloading filament...    
      STATUS_BUSY
      M83
      G92 E0     
      {% if (printer.extruder.can_extrude|lower != 'true')%} # Checking for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temperature. min_extrude_temp must be defined in the extruder config (to about 185)        
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_unload_temp} # restore user temp if it was set before loading        
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.filament_unload_temp-1}  
      {% endif %}
      {% if(printer.extruder.target == 0) %} # Checking for set temperature if is zero than set to 185 / hotend hot but cooling due to set target temp 0            
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_unload_temp} # restore user temp if it was set before loading        
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.filament_unload_temp-1} 
      {% endif %}
      G0 E10 F500       ## extruder 20mm of filament before extracting 
      G0 E-5 F3600 	    ## extract filament to cold end
      G4 P2000          ## wait for two seconds
      G0 E6 F3600       ## push the filament back 
      G0 E-10 F3600 	## extract filament to cold end
      G0 E-{sensor.unload_distance} F300	# continue extraction slowly and allow filament to be cooled enough before reaches the gears       
      M400 # wait to complete unload
      STATUS_READY
      M118 Planny: Filament unload complete!   
      #{% if (sensor.enable_beep|lower == 'true') %}
      #  M300 # beep sound
      #{% endif %}

[gcode_macro FILAMENT_TANGLE] 
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
  M118 Planny: SHIT! Filament tangle detected, print paused!
  STATUS_ERROR
  #{% if (sensor.enable_beep|lower == 'true') %} 
  #  M300 # beep sound
  #{% endif %}
  PAUSE

  
########################################################
####   Macros: Busy!
########################################################

[delayed_gcode CLEAR_UNLOADBUSY]
gcode:
  SET_GCODE_VARIABLE MACRO=UNLOAD_FILAMENT VARIABLE=unloadbusy VALUE=0
  STATUS_BUSY
  M118 Planny: I am busy clearing the Filament Unload request! 

[delayed_gcode CLEAR_CHANGEBUSY]
gcode:
  SET_GCODE_VARIABLE MACRO=FILAMENT_CHANGE_STATE1 VARIABLE=changebusy VALUE=0
  STATUS_BUSY
  M118 Planny: I am busy clearing the Filament Change request!  

[delayed_gcode CLEAR_LOADBUSY]
gcode:
  SET_GCODE_VARIABLE MACRO=UNLOAD_TANGLE_INIT VARIABLE=loadbusy VALUE=0
  STATUS_BUSY
  M118 Planny: I am busy clearing the Filament Load request!  


########################################################
####   Macros: Activate Extruder
########################################################

[gcode_macro T0]
description: Activate Extruder
gcode:
  ACTIVATE_EXTRUDER EXTRUDER=extruder

[gcode_macro ENGAGE_EXTRUDER]
description: call weirdly named macro to activate my extruder
gcode:
  T0
