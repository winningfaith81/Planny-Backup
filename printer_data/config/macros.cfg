########################################################
####   AUTO BEACON
########################################################

[gcode_macro COLD_AUTO_BACON]
gcode: 
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    STATUS_CALIBRATING_Z
    TURN_OFF_HEATERS
    G28
    G90
    G1 X{x_wait} Y{y_wait} Z15 F9000                      # MOVE - Go to center of the bed
    BEACON_AUTO_CALIBRATE
    STATUS_READY


########################################################
####   Time Out Adjustments - Seconds
########################################################

[gcode_macro WAIT_FOREVER]
gcode: 
    SET_IDLE_TIMEOUT TIMEOUT=99999        # Gives us enough time to do stuff

[gcode_macro WAIT_DEFAULT]
gcode: 
    SET_IDLE_TIMEOUT TIMEOUT=600          # Default Time Out is 10 minutes


########################################################
####   Stepper Buzz
########################################################

[gcode_macro BUZZ_XY]
gcode: 
    stepper_buzz stepper=stepper_x
    stepper_buzz stepper=stepper_y


########################################################
####   HOMING OVERRIDE BEACON SUBSTITUTE - FOR SENSORLESS HOMING - Not Currently Used
########################################################

#[gcode_macro _HOME_PRE_AXIS]
#gcode:
  # Adapt this for your printer.
#  {% set HOME_CURRENT = 0.5 %}
#  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

#[gcode_macro _HOME_POST_AXIS]
#gcode:
#  {% set axis = params.AXIS %}
#  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}

  # Move away
#  SAVE_GCODE_STATE NAME=HOME_POST_AXIS
#  G91
#  G0 {axis}-10 F3600
#  RESTORE_GCODE_STATE NAME=HOME_POST_AXIS

  # Make sure StallGuard registers are cleared
#  M400
  # Set current during print
#  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
  
########################################################
####   PAUSE
########################################################

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:  
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
    {% set x = params.X|default(sensor.park_position_x) %}   
    {% set y = params.Y|default(sensor.park_position_y) %}   
    {% set z = params.Z|default(sensor.park_lift_z)|float %} 
    {% set e = params.E|default(sensor.park_retraction) %}   
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_restore_temp VALUE={printer.heater_bed.target}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=extruder_restore_temp VALUE={printer.extruder.target}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state 
    SET_IDLE_TIMEOUT TIMEOUT={(sensor.pause_timeout)|float} # increase printer timeout
    PAUSE_BASE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    STATUS_BUSY

########################################################
####   RESUME
########################################################

[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_bed_restore_temp:0
variable_extruder_restore_temp:0
gcode:
    STATUS_HEATING
    ##### set defaults #####
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %} 
    M118 Restoring heaters temperature, it might take a whIle!
    M118 Restoring bed temperature...
    M140 S{bed_restore_temp}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={(bed_restore_temp-1)}
    M118 Restoring extruder temperature...
    M104 S{extruder_restore_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={(extruder_restore_temp-1)}
    {% set e = params.E|default(sensor.park_retraction) %} 
    G91
    G1 E{e} F2100
    G90    
    M118 Temperatures restored, resume printing!
    SET_IDLE_TIMEOUT TIMEOUT=600            # restores klipper default printer timeout to 10 min
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    RESUME_BASE
    STATUS_READY

########################################################
####   CANCEL PRINT
########################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
    ## Move head and retract only if not already in the pause state and park set to true
    SET_DISPLAY_TEXT MSG="I CAN'T DO IT CAPTAIN!!"        # DISPLAY WORDS
    {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
      PAUSE_BASE
    {% endif %}
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    CANCEL_PRINT_BASE
    STATUS_ERROR
    G91                                                   # Incremental positioning
### RETRACT GANTRY AND FILAMENT - CLEAR Z ###
    G1 E-.75 Z0.2 F2700
    G1 X5 Y5 F3000
### PRESENT PRINT ###
    G1 Z10 F1500
    G90
    G1 X255 Y250
### SHUT DOWN PRINTING HARDWARE ###
    M107 S0                                               # Turn-off fan
    M104 S0                                               # Turn-off hotend
    M140 S0                                               # Turn-off bed
    M84 X Y E                                             # Disable motors
    SET_PIN PIN=SUAFT VALUE=0                             # SUAFT - Turn off SUAFT
### COOL DOWN ###
    STATUS_COOLING                                        # LED - Cooling-mode
    SET_DISPLAY_TEXT MSG="You got to cool it doooooowwwwnnnnnn!"  # DISPLAY WORDS
    SET_FAN_SPEED FAN=eBay_intake SPEED=1                 # FAN - Adjust Electronics intake fan speed
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=1                # FAN - Adjust Electronics exhaust fan speed
    G4 P300000                                            # DELAY - Wait 5 minutes 
### RESET PRINTER ENVIRONMENT ###
    SET_FAN_SPEED FAN=eBay_intake SPEED=0                 # FAN - Turn off Electronics intake fan
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=0                # FAN - Turn off Electronics exhaust fan
    SET_LED LED=enclosure_wled WHITE=0.05 SYNC=0 TRANSMIT=1       # LED - Adjust enclosure light level
    STATUS_READY                                          # LED - Ready-mode
    SET_DISPLAY_TEXT MSG="Ready to try again!"  # DISPLAY WORDS


########################################################
####   START PRINT
########################################################

[gcode_macro START_PRINT]
description: Start printing
gcode:
### FETCH PARAMETERS FROM SLICER - TEMPS & SIZE ###
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("45")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    STOP_LED_EFFECTS                                      # LED - Stop any LED effects in progress
### HOMING ###
    STATUS_HOMING                                         # LED - Homing-mode
    G28                                                   # HOME - Full home (XYZ)
    G90                                                   # MOVE - Absolute position
    BED_MESH_CLEAR                                        # BED_MESH - Clear old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                  # BEACON - Set offset to 0
### BED HEAT SOAK ###
    {% if params.BED|int > 90 %}                          # LOGIC - Is bed_temp_int > 90c? if yes, trigger a heatsoak.
      SET_DISPLAY_TEXT MSG="Heating the Bed: {target_bed}c"  # DISPLAY WORDS
      STATUS_HEATING                                      # LED - Heating-mode
      M106 S255                                           # FAN - Turn on the PT-fan
    SET_PIN PIN=SUAFT VALUE=1                             # SUAFT - Turn on the SUAFT
    G1 X{x_wait} Y{y_wait} Z15 F9000                      # MOVE - Go to center of the bed
    M190 S{target_bed}                                    # TEMP - Set the target temp for the bed
### CHAMBER HEAT SOAK ###
    SET_DISPLAY_TEXT MSG="Chamber Heatsoak: {target_chamber}c"   # DISPLAY WORDS
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # DELAY - Waits for chamber temp
### BED HEAT SOAK - 5 MINS ###
    {% else %}                                            # LOGIC - If bed_temp_int <= 90c, skip; Heat Bed. 5 Min Soak.
      SET_DISPLAY_TEXT MSG="Heating Bed to: {target_bed}c"       # DISPLAY WORDS
      STATUS_HEATING                                      # LED - Heating-mode
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # MOVE - Go to center of the bed
      M190 S{target_bed}                                  # TEMP - Set the target temp for the bed
      SET_DISPLAY_TEXT MSG="Soaking The Bed in FIRE!"     # DISPLAY WORDS
      G4 P300000                                          # DELAY - Wait 5 min for the bedtemp to stabilize
    {% endif %}                                           # LOGIC
    SET_DISPLAY_TEXT MSG="Heating Hotend to 150c for Z-Home"     # DISPLAY WORDS
    M109 S150                                             # TEMP - Heat hotend to 150c. This helps with getting a correct Z-home.
    #STATUS_CLEANING                                       # LED - Nozzle Cleaning
# --- Include a Nozzle Wipe Macro Here --- #
### Z CALIBRATING & BED LEVELING ###
    STATUS_CALIBRATING_Z                                  # LED - Calibrating Z mode
    G28 Z METHOD=CONTACT CALIBRATE=1                      # BEACON - Calibrate z offset and beacon model @ home location
    SET_DISPLAY_TEXT MSG="Leveling Bed"                   # DISPLAY WORDS
    STATUS_LEVELING                                       # LED - Leveling-mode
    Z_TILT_ADJUST                                         # Z-TILT
    G28 Z                                                 # HOME - Post Z_TILT_ADJUST
### BED MESH ###
    SET_DISPLAY_TEXT MSG="Calculating Bed Mesh & Z"       # DISPLAY WORDS
    STATUS_MESHING                                        # LED - Bed_mesh-mode
    BED_MESH_CALIBRATE ADAPTIVE=1 RUNS=2                  # BED_MESH - Start the bed mesh
    #STATUS_CLEANING                                       # LED - Nozzle Cleaning
# --- Include a Nozzle Wipe Macro Here --- #
    STATUS_CALIBRATING_Z                                  # LED - Calibrating Z mode
    G28 Z METHOD=CONTACT CALIBRATE=0                      # BEACON - Calibrate z offset only with hot nozzle
### HEATING NOZZLE ###
    SET_DISPLAY_TEXT MSG="Heating Hotend to: {target_extruder}c"  # DISPLAY WORDS
    STATUS_HEATING                                        # LED - Heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                      # MOVE - Go to center of the bed
    M107                                                  # FAN - Turn off partcooling fan
    M109 S{target_extruder}                               # NOZZLE - Heat the hotend to set temp
    SET_GCODE_OFFSET Z=0.03                              # BEACON - Add a little offset for hotend thermal expansion - was 0.06
### FINAL FLIGHT SETTINGS ###
    SET_FAN_SPEED FAN=eBay_intake SPEED=0.75              # FAN - Adjust Electronics intake fan speed
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=0.75             # FAN - Adjust Electronics exhaust fan speed
    SET_DISPLAY_TEXT MSG="Printer goes brr"               # DISPLAY WORDS
    STATUS_PRINTING                                       # LED - Printing-mode
    SET_LED LED=enclosure_wled WHITE=0.25 SYNC=0 TRANSMIT=1      # LED - Adjust enclosure light level
    G0 X{x_wait - 50} Y4 F10000                           # MOVE - Go to starting point
    G0 Z0.4                                               # MOVE - Raise Z to 0.4
    G91                                                   # MOVE - Incremental positioning 
    ZEROG_PURGE                                           # Primeline / Purge Line
    G90       


########################################################
####   END PRINT
########################################################

[gcode_macro END_PRINT]
gcode:
    STATUS_DONE                                           # LED - Print completed
    G91                                                   # Incremental positioning
### RETRACT GANTRY AND FILAMENT - CLEAR Z ###
    G1 E-.75 Z0.2 F2700
    G1 X5 Y5 F3000
### PRESENT PRINT ###
    G1 Z10 F1500
    G90
    G1 X255 Y250
### SHUT DOWN PRINTING HARDWARE ###
    SET_DISPLAY_TEXT MSG="Turning Shit Off"               # DISPLAY WORDS
    M107 S0                                               # Turn-off fan
    M104 S0                                               # Turn-off hotend
    #SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
    #SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    M140 S0                                               # Turn-off bed
    M84 X Y E                                             # Disable motors
    SET_PIN PIN=SUAFT VALUE=0                             # SUAFT - Turn off SUAFT
### COOL DOWN ###
    STATUS_COOLING                                        # LED - Cooling-mode
    SET_DISPLAY_TEXT MSG="You got to cool it doooooowwwwnnnnnn!"  # DISPLAY WORDS
    SET_FAN_SPEED FAN=eBay_intake SPEED=0.6               # FAN - Adjust Electronics intake fan speed
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=1                # FAN - Adjust Electronics exhaust fan speed
    #SET_DISPLAY_TEXT MSG="Waiting For Nozzle Temp"               # DISPLAY WORDS
    #TEMPERATURE_WAIT SENSOR="temperature_sensor extruder" MINIMUM={180}   # DELAY - Waits for chamber temp
    G4 P300000                                            # DELAY - Wait 5 min for the bedtemp to stabilize
### RESET PRINTER ENVIRONMENT ###
    #SET_DISPLAY_TEXT MSG="Let's Recalibrate Beacon"       # DISPLAY WORDS
    #G28
    #BEACON_AUTO_CALIBRATE
    SET_FAN_SPEED FAN=eBay_intake SPEED=0                 # FAN - Turn off Electronics intake fan
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=0                # FAN - Turn off Electronics exhaust fan
    SET_LED LED=enclosure_wled WHITE=0.05 SYNC=0 TRANSMIT=1       # LED - Adjust enclosure light level
    STATUS_READY                                          # LED - Ready-mode
    SET_DISPLAY_TEXT MSG="Feed Me, Seymour!!"             # DISPLAY WORDS


########################################################
####   POST MANUAL-CANCEL PRINT
########################################################

[gcode_macro POST_CANCEL]
gcode:
    G91                                                   # Incremental positioning
### PRESENT PRINT ###
    G1 Z10 F1500
    G90
    G1 X255 Y250
### SHUT DOWN PRINTING HARDWARE ###
    M107 S0                                               # Turn-off fan
    M104 S0                                               # Turn-off hotend
    M140 S0                                               # Turn-off bed
    M84 X Y E                                             # Disable motors
    SET_PIN PIN=SUAFT VALUE=0                             # SUAFT - Turn off SUAFT
### COOL DOWN ###
    STATUS_COOLING                                        # LED - Cooling-mode
    SET_DISPLAY_TEXT MSG="You got to cool it doooooowwwwnnnnnn!"  # DISPLAY WORDS
    SET_FAN_SPEED FAN=eBay_intake SPEED=1                 # FAN - Adjust Electronics intake fan speed
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=1                # FAN - Adjust Electronics exhaust fan speed
    G4 P300000                                            # DELAY - Wait 5 minutes 
### RESET PRINTER ENVIRONMENT ###
    SET_FAN_SPEED FAN=eBay_intake SPEED=0                 # FAN - Turn off Electronics intake fan
    SET_FAN_SPEED FAN=eBay_exhaust SPEED=0                # FAN - Turn off Electronics exhaust fan
    SET_LED LED=enclosure_wled WHITE=0.05 SYNC=0 TRANSMIT=1       # LED - Adjust enclosure light level
    STATUS_READY                                          # LED - Ready-mode
    SET_DISPLAY_TEXT MSG="Ready to try again!"             # DISPLAY WORDS


########################################################
####   Update GIT with Backup Files
########################################################

[gcode_macro UPDATE_GIT]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=UPDATE_GIT_SCRIPT_MESSAGE PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=UPDATE_GIT_SCRIPT
    {% endif %}

[gcode_shell_command UPDATE_GIT_SCRIPT]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command UPDATE_GIT_SCRIPT_MESSAGE]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True


########################################################
####   Spoolman Macros
########################################################
#### Notes: With the above configuration it is possible to run the SET_ACTIVE_SPOOL ID=1 
#### command to set the currently tracked spool ID to 1, and the CLEAR_ACTIVE_SPOOL to 
#### clear spool tracking (useful when unloading filament for example).
########################################################

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}




